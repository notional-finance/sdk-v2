syntax = "proto3";

message SerializedBigNumber {
    bool _isBigNumber = 1;
    string _hex = 2;
}

message SerializedContract {
    bool _isSerializedContract = 1;
    string _address = 2;
    string _abiName = 3;
}

message SerializedTypedBigNumber {
    bool _isTypedBigNumber = 1;
    string hex = 2;
    string bigNumberType = 3;
    string symbol = 4;
}

message sNOTE {
    string poolId = 1;
    int32 coolDownTimeInSeconds = 2;
    int32 redeemWindowSeconds = 3;
    SerializedTypedBigNumber ethBalance = 4;
    SerializedTypedBigNumber noteBalance = 5;
    SerializedBigNumber balancerPoolTotalSupply = 6;
    SerializedBigNumber sNOTEBptBalance = 7;
    SerializedBigNumber swapFee = 8;
    SerializedTypedBigNumber sNOTETotalSupply= 9;
}

message Asset {
    int32 currencyId = 1;
    int32 maturity = 2;
    string assetType = 3;
    SerializedTypedBigNumber notional = 4;
    int32 settlementDate = 5;
}

message ETHRate {
  SerializedContract rateOracle = 1;
  int32 rateDecimalPlaces = 2;
  bool mustInvert = 3;
  int32 buffer = 4;
  int32 haircut = 5;
  SerializedBigNumber latestRate = 6;
}

message AssetRate {
  SerializedContract rateAdapter = 1;
  int32 underlyingDecimalPlaces = 2;
  SerializedBigNumber latestRate = 3;
  SerializedBigNumber annualSupplyRate = 4;
}

message nToken {
    // First set of fields update less frequently
    string name = 1;
    string nTokenSymbol = 2;
    SerializedBigNumber incentiveEmissionRate = 3;
    int32 pvHaircutPercentage = 4;
    repeated int32 depositShares = 5;
    repeated int32 leverageThresholds = 6;
    SerializedContract contract = 7;

    // Fields below here update more frequently than fields above
    SerializedTypedBigNumber assetCashPV = 8;
    SerializedTypedBigNumber totalSupply = 9;
    SerializedBigNumber accumulatedNOTEPerNToken = 10;
    SerializedBigNumber lastAccumulatedTime = 11;
    SerializedTypedBigNumber cashBalance = 12;
    repeated Asset liquidityTokens = 13;
    repeated Asset fCash = 14;

    // incentive migration factors
    SerializedBigNumber migratedEmissionRate = 15;
    SerializedBigNumber integralTotalSupply = 16;
    int32 migrationTime = 17;
}

message Currency {
    int32 id = 1;
    string assetName = 2;
    string assetSymbol = 3;
    SerializedBigNumber assetDecimals = 4;
    int32 assetDecimalPlaces = 5;
    SerializedContract assetContract = 6;
    string tokenType = 7;
    bool hasTransferFee = 8;
    optional string underlyingName = 9;
    optional string underlyingSymbol = 10;
    optional SerializedBigNumber underlyingDecimals = 11;
    optional int32 underlyingDecimalPlaces = 12;
    optional SerializedContract underlyingContract = 13;
    optional string nTokenSymbol = 14;
}

message Market {
    SerializedTypedBigNumber totalfCash = 1;
    SerializedTypedBigNumber totalAssetCash = 2;
    SerializedTypedBigNumber totalLiquidity = 3;
    int32 lastImpliedRate = 4;
    int32 oracleRate = 5;
    int32 previousTradeTime = 6;
}

message CashGroup {
    int32 maxMarketIndex = 1;
    int32 rateOracleTimeWindowSeconds = 2;
    int32 totalFeeBasisPoints = 3;
    int32 reserveFeeSharePercent = 4;
    int32 debtBufferBasisPoints = 5;
    int32 fCashHaircutBasisPoints = 6;
    repeated int32 liquidityTokenHaircutsPercent = 7;
    repeated int32 rateScalars = 8;
    repeated Market markets = 9;
}

message SystemData {
    string network = 1;
    int32 lastUpdateBlockNumber = 2;
    int32 lastUpdateTimestamp = 3;

    // key = symbol, value = exchange rate in 18 decimals as a string
    map<string, SerializedBigNumber> USDExchangeRates = 4;
    sNOTE StakedNoteParameters = 5;

    // Everything here has a key of currency id
    map<int32, Currency> currencies = 6;
    map<int32, ETHRate> ethRateData = 7;
    map<int32, AssetRate> assetRateData = 8;
    map<int32, nToken> nTokenData = 9;
    map<int32, CashGroup> cashGroups = 10;
}